name: "Test API"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_api:
    runs-on: ubuntu-latest
    services:
      keycloak:
        image: quay.io/keycloak/keycloak:22.0
        ports:
          - 8080:8080
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
          KC_HEALTH_ENABLED: true
    steps:
    - uses: actions/checkout@v3
    - name: Check Docker Network
      run: |
        docker ps -a
        docker network ls
    - name: Check Keycloak
      run: |
        curl http://localhost:8080/health
        ./.github/scripts/get_openid_configuration.py --base-url http://localhost:8080/
    - name: Setup Keycloak
      run: |
        ./.github/scripts/load_keycloak_realm.py --base-url http://localhost:8080/ --realm-json .github/data/keycloak/realms/keycloak-test-realm.json
    - name: Prepare java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - name: Install clojure tools
      uses: DeLaGuardo/setup-clojure@10.3
      with:
        cli: 1.10.3.1075
    - name: Setup PostgreSQL
      uses: ikalnytskyi/action-setup-postgres@v4
    - name: Clone sequencing-runs-db repo
      run: |
        git clone https://github.com/dfornika/sequencing-runs-db.git
    - name: Create Database
      run: |
        .github/scripts/create_database.sh
    - name: Setup Flyway
      run: |
        ./sequencing-runs-db/.github/scripts/install_flyway.sh
    - name: Flyway Migrate
      run: |
        .github/scripts/apply_migrations.sh
    - name: Build uberjar
      run: |
        ./scripts/build.sh
    - name: Start Server
      run: |
        ./scripts/start.sh &
    - name: Download OpenAPI schema
      run: |
        wget https://raw.githubusercontent.com/dfornika/genomics-services-api-schemas/main/schemas/sequencing-runs-service.yaml
    - name: Test API
      uses: schemathesis/action@v1
      with:
        schema: ./sequencing-runs-service.yaml
        base-url: http://localhost:8080
        api-name: 'sequencing-runs-api'
        report: 'schemathesis_report.tar.gz'
    - name: Collect Artifacts
      if: always()
      run: |
        datetime=`date +'%Y%m%d%H%M%S'`
        mkdir ${datetime}_sequencing-runs-service_test_api_artifacts
        mkdir ${datetime}_sequencing-runs-service_test_api_artifacts/migration_report
        mkdir ${datetime}_sequencing-runs-service_test_api_artifacts/schemathesis_report
        mkdir ${datetime}_sequencing-runs-service_test_api_artifacts/openapi_schema
        cp sequencing-runs-service.yaml ${datetime}_sequencing-runs-service_test_api_artifacts/openapi_schema
        tar -xzf schemathesis_report.tar.gz -C ${datetime}_sequencing-runs-service_test_api_artifacts/schemathesis_report
        cp report.html ${datetime}_sequencing-runs-service_test_api_artifacts/migration_report/migration-report.html
        cp report.json ${datetime}_sequencing-runs-service_test_api_artifacts/migration_report/migration-report.json
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: artifacts
        path: '*_sequencing-runs-service_test_api_artifacts'
